// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/account/user.proto

package _go

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type User struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Email                string   `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Name                 string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	CompanyId            uint64   `protobuf:"varint,5,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_758175df987a0569, []int{0}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetCompanyId() uint64 {
	if m != nil {
		return m.CompanyId
	}
	return 0
}

type RegisterUserRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	CompanyId            uint64   `protobuf:"varint,4,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterUserRequest) Reset()         { *m = RegisterUserRequest{} }
func (m *RegisterUserRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterUserRequest) ProtoMessage()    {}
func (*RegisterUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_758175df987a0569, []int{1}
}

func (m *RegisterUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterUserRequest.Unmarshal(m, b)
}
func (m *RegisterUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterUserRequest.Marshal(b, m, deterministic)
}
func (m *RegisterUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterUserRequest.Merge(m, src)
}
func (m *RegisterUserRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterUserRequest.Size(m)
}
func (m *RegisterUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterUserRequest proto.InternalMessageInfo

func (m *RegisterUserRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *RegisterUserRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *RegisterUserRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RegisterUserRequest) GetCompanyId() uint64 {
	if m != nil {
		return m.CompanyId
	}
	return 0
}

type RegisterUserResponse struct {
	UserId               uint64   `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterUserResponse) Reset()         { *m = RegisterUserResponse{} }
func (m *RegisterUserResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterUserResponse) ProtoMessage()    {}
func (*RegisterUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_758175df987a0569, []int{2}
}

func (m *RegisterUserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterUserResponse.Unmarshal(m, b)
}
func (m *RegisterUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterUserResponse.Marshal(b, m, deterministic)
}
func (m *RegisterUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterUserResponse.Merge(m, src)
}
func (m *RegisterUserResponse) XXX_Size() int {
	return xxx_messageInfo_RegisterUserResponse.Size(m)
}
func (m *RegisterUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterUserResponse proto.InternalMessageInfo

func (m *RegisterUserResponse) GetUserId() uint64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type VerifyUserRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VerifyUserRequest) Reset()         { *m = VerifyUserRequest{} }
func (m *VerifyUserRequest) String() string { return proto.CompactTextString(m) }
func (*VerifyUserRequest) ProtoMessage()    {}
func (*VerifyUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_758175df987a0569, []int{3}
}

func (m *VerifyUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyUserRequest.Unmarshal(m, b)
}
func (m *VerifyUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyUserRequest.Marshal(b, m, deterministic)
}
func (m *VerifyUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyUserRequest.Merge(m, src)
}
func (m *VerifyUserRequest) XXX_Size() int {
	return xxx_messageInfo_VerifyUserRequest.Size(m)
}
func (m *VerifyUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyUserRequest proto.InternalMessageInfo

func (m *VerifyUserRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *VerifyUserRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type VerifyUserResponse struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	User                 *User    `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VerifyUserResponse) Reset()         { *m = VerifyUserResponse{} }
func (m *VerifyUserResponse) String() string { return proto.CompactTextString(m) }
func (*VerifyUserResponse) ProtoMessage()    {}
func (*VerifyUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_758175df987a0569, []int{4}
}

func (m *VerifyUserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyUserResponse.Unmarshal(m, b)
}
func (m *VerifyUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyUserResponse.Marshal(b, m, deterministic)
}
func (m *VerifyUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyUserResponse.Merge(m, src)
}
func (m *VerifyUserResponse) XXX_Size() int {
	return xxx_messageInfo_VerifyUserResponse.Size(m)
}
func (m *VerifyUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyUserResponse proto.InternalMessageInfo

func (m *VerifyUserResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *VerifyUserResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func init() {
	proto.RegisterType((*User)(nil), "account.User")
	proto.RegisterType((*RegisterUserRequest)(nil), "account.RegisterUserRequest")
	proto.RegisterType((*RegisterUserResponse)(nil), "account.RegisterUserResponse")
	proto.RegisterType((*VerifyUserRequest)(nil), "account.VerifyUserRequest")
	proto.RegisterType((*VerifyUserResponse)(nil), "account.VerifyUserResponse")
}

func init() {
	proto.RegisterFile("proto/account/user.proto", fileDescriptor_758175df987a0569)
}

var fileDescriptor_758175df987a0569 = []byte{
	// 468 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x53, 0xd1, 0x6e, 0xd3, 0x30,
	0x14, 0xc5, 0x25, 0xed, 0xe8, 0x1d, 0x43, 0xcc, 0x14, 0x11, 0x15, 0xaa, 0x96, 0x0a, 0xa4, 0x42,
	0x49, 0xc2, 0x32, 0x81, 0xd8, 0x1b, 0x8a, 0xb4, 0x87, 0x69, 0xe2, 0x25, 0x08, 0x34, 0xb1, 0x6e,
	0x55, 0x9a, 0x98, 0x60, 0x6d, 0x89, 0x8b, 0xed, 0x2c, 0x4c, 0x08, 0x7e, 0x82, 0x2f, 0xe0, 0xbb,
	0x78, 0xa8, 0xd4, 0x1f, 0x01, 0xc5, 0xf1, 0x42, 0x23, 0xc6, 0xfb, 0xde, 0x72, 0xce, 0x3d, 0xbe,
	0xf7, 0x9c, 0x1b, 0x1b, 0xcc, 0x39, 0x67, 0x92, 0x39, 0x41, 0x18, 0xb2, 0x2c, 0x95, 0x4e, 0x26,
	0x08, 0xb7, 0x15, 0x85, 0xd7, 0x34, 0xd7, 0x7d, 0x19, 0x53, 0xf9, 0x29, 0x9b, 0xd9, 0x21, 0x4b,
	0x9c, 0x24, 0xa7, 0xf2, 0x84, 0xe5, 0x4e, 0xcc, 0x2c, 0xa5, 0xb2, 0xce, 0x82, 0x53, 0x1a, 0x05,
	0x92, 0x71, 0xe1, 0x54, 0x9f, 0x65, 0x83, 0xe1, 0x14, 0x8c, 0x77, 0x82, 0x70, 0x7c, 0x0b, 0x1a,
	0x34, 0x32, 0xd1, 0x00, 0x8d, 0x0c, 0xbf, 0x41, 0x23, 0xdc, 0x81, 0x26, 0x49, 0x02, 0x7a, 0x6a,
	0x36, 0x06, 0x68, 0xd4, 0xf6, 0x4b, 0x80, 0x31, 0x18, 0x69, 0x90, 0x10, 0xd3, 0x50, 0xa4, 0xfa,
	0xc6, 0x3d, 0x80, 0x90, 0x25, 0xf3, 0x20, 0x3d, 0x9f, 0xd2, 0xc8, 0x6c, 0xaa, 0x0e, 0x6d, 0xcd,
	0xec, 0x45, 0xc3, 0x5f, 0x08, 0xee, 0xf8, 0x24, 0xa6, 0x42, 0x12, 0x5e, 0x4c, 0xf2, 0xc9, 0xe7,
	0x8c, 0x08, 0x89, 0xf7, 0x2f, 0x06, 0x14, 0x33, 0xdb, 0xde, 0x8b, 0xe5, 0xa2, 0xbf, 0x05, 0xd6,
	0xf1, 0x24, 0x1f, 0x8f, 0x0e, 0xad, 0xb1, 0x7d, 0x34, 0xc9, 0xc7, 0x4f, 0x9e, 0xbe, 0x2e, 0xa1,
	0x46, 0x13, 0xbb, 0x06, 0x1f, 0x1d, 0xa0, 0x0b, 0x5f, 0x5b, 0x70, 0x63, 0x1e, 0x08, 0x91, 0x33,
	0x1e, 0x95, 0x86, 0xbd, 0xbb, 0xcb, 0x45, 0x7f, 0x13, 0x36, 0x8e, 0x0f, 0x07, 0xd6, 0xf7, 0xa3,
	0xaf, 0xaf, 0x9e, 0x6d, 0xbb, 0xdf, 0x0a, 0x7d, 0x25, 0xc3, 0x3d, 0x1d, 0xe5, 0xba, 0x92, 0xb7,
	0x97, 0x8b, 0x7e, 0xf3, 0x00, 0x7d, 0xf9, 0x8d, 0x74, 0xaa, 0xc7, 0xb5, 0x54, 0x45, 0x5e, 0xc3,
	0x6b, 0x2d, 0x17, 0xfd, 0xc6, 0xed, 0x6b, 0xab, 0xe9, 0x1c, 0xe8, 0xd4, 0xc3, 0x89, 0x39, 0x4b,
	0x05, 0xc1, 0xf7, 0x60, 0xad, 0xf8, 0x4b, 0xd3, 0x6a, 0xa7, 0xad, 0x02, 0xee, 0x45, 0xc3, 0x1f,
	0x08, 0x36, 0xdf, 0x13, 0x4e, 0x3f, 0x9e, 0x5f, 0xa1, 0x65, 0x0c, 0xdf, 0x00, 0x5e, 0x35, 0xa5,
	0x43, 0x74, 0xa0, 0x29, 0xd9, 0x09, 0x49, 0x4b, 0x57, 0x7e, 0x09, 0xf0, 0x43, 0x30, 0x8a, 0x2c,
	0xaa, 0xf5, 0xba, 0xbb, 0x61, 0xeb, 0x1b, 0x68, 0xab, 0xa3, 0xaa, 0xe4, 0xfe, 0x44, 0xb0, 0x5e,
	0xc0, 0xb7, 0x84, 0x9f, 0xd1, 0x90, 0xe0, 0x7d, 0xb8, 0xb9, 0xba, 0x25, 0xfc, 0xa0, 0x3a, 0x74,
	0xc9, 0xcd, 0xe8, 0xf6, 0xfe, 0x53, 0xd5, 0xae, 0x76, 0x01, 0xfe, 0x7a, 0xc5, 0xdd, 0x4a, 0xfc,
	0xcf, 0x56, 0xbb, 0xf7, 0x2f, 0xad, 0x95, 0x6d, 0x3c, 0xf7, 0xc3, 0xf3, 0x95, 0x27, 0xc3, 0x38,
	0x8d, 0x69, 0x3a, 0x23, 0x69, 0x2a, 0x59, 0xe6, 0xb8, 0x3b, 0xee, 0x8e, 0xb7, 0xeb, 0xd4, 0x5f,
	0x5d, 0xcc, 0x66, 0x2d, 0xc5, 0x6c, 0xff, 0x09, 0x00, 0x00, 0xff, 0xff, 0xd7, 0xf7, 0xb4, 0xf5,
	0x90, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserServiceClient interface {
	RegisterUser(ctx context.Context, in *RegisterUserRequest, opts ...grpc.CallOption) (*RegisterUserResponse, error)
	VerifyUser(ctx context.Context, in *VerifyUserRequest, opts ...grpc.CallOption) (*VerifyUserResponse, error)
}

type userServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewUserServiceClient(cc grpc.ClientConnInterface) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) RegisterUser(ctx context.Context, in *RegisterUserRequest, opts ...grpc.CallOption) (*RegisterUserResponse, error) {
	out := new(RegisterUserResponse)
	err := c.cc.Invoke(ctx, "/account.UserService/RegisterUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) VerifyUser(ctx context.Context, in *VerifyUserRequest, opts ...grpc.CallOption) (*VerifyUserResponse, error) {
	out := new(VerifyUserResponse)
	err := c.cc.Invoke(ctx, "/account.UserService/VerifyUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServiceServer is the server API for UserService service.
type UserServiceServer interface {
	RegisterUser(context.Context, *RegisterUserRequest) (*RegisterUserResponse, error)
	VerifyUser(context.Context, *VerifyUserRequest) (*VerifyUserResponse, error)
}

// UnimplementedUserServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUserServiceServer struct {
}

func (*UnimplementedUserServiceServer) RegisterUser(ctx context.Context, req *RegisterUserRequest) (*RegisterUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterUser not implemented")
}
func (*UnimplementedUserServiceServer) VerifyUser(ctx context.Context, req *VerifyUserRequest) (*VerifyUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VerifyUser not implemented")
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_RegisterUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).RegisterUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.UserService/RegisterUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).RegisterUser(ctx, req.(*RegisterUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_VerifyUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).VerifyUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.UserService/VerifyUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).VerifyUser(ctx, req.(*VerifyUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "account.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterUser",
			Handler:    _UserService_RegisterUser_Handler,
		},
		{
			MethodName: "VerifyUser",
			Handler:    _UserService_VerifyUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/account/user.proto",
}
